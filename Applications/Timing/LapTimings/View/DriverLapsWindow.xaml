<Window x:Class="SecondMonitor.Timing.LapTimings.View.DriverLapsWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModel1="clr-namespace:SecondMonitor.Timing.LapTimings.ViewModel"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewModel1:DriverLapsViewModel, IsDesignTimeCreatable=True}" Title="{Binding Path=DriverName, Mode=OneTime, StringFormat='Driver Laps ( {0} )' }" Width="504.017" Height="386.886">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/WindowsControls;component/WPF/FuelControl/FuelOverviewControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/WindowsControls;component/WPF/TemperatureControl/TemperatureControlT.xaml" />
                <ResourceDictionary Source="pack://application:,,,/WindowsControls;component/WPF/PedalControl/PedalGearControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/WindowsControls;component/WPF/WheelStatusControl/WheelStatucControlT.xaml" />
                <ResourceDictionary Source="pack://application:,,,/WindowsControls;component/WPF/TrackInfoControl/TrackInfoControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/WindowsControls;component/WPF/DriverPosition/DriverPositionControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/WindowsControls;component/WPF/ComboboxStyles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/WindowsControls;component/WPF/FuelControl/FuelPlannerControl.xaml" />
            </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Window.Resources>
            <Grid Background="{StaticResource Anthracite01Brush}" >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Style="{StaticResource StandardText}" Text="{Binding Path=DriverName}" VerticalAlignment="Top" Margin="10" Height="31" Foreground="White" FontSize="18" HorizontalAlignment="Center"/>
        <DataGrid Grid.Row="1" x:Name="LapsGrid" Margin="10,5,10,10" VerticalAlignment="Stretch" FontSize="18" Foreground="White" Background="Black" ItemsSource="{Binding Laps}" HeadersVisibility="Column" AutoGenerateColumns="False"
                  IsReadOnly="True" SelectionMode="Single" SelectionUnit="FullRow"
                  d:DataContext="{d:DesignInstance Type=viewModel1:LapViewModel}">
            <DataGrid.Resources>
            <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="Blue" />
                <Setter Property="BorderBrush"  Value="White" />
                <Setter Property="BorderThickness" Value="1"></Setter>
                    <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                </Style>
                <Style x:Key="TextBoxStyleSector1" TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSector1PersonalBest}" Value="True">
                            <Setter Property="Background" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSector1SessionBest}" Value="True">
                            <Setter Property="Background" Value="Purple"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="TextBoxStyleSector2" TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSector2PersonalBest}" Value="True">
                            <Setter Property="Background" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSector2SessionBest}" Value="True">
                            <Setter Property="Background" Value="Purple"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="TextBoxStyleSector3" TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSector3PersonalBest}" Value="True">
                            <Setter Property="Background" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSector3SessionBest}" Value="True">
                            <Setter Property="Background" Value="Purple"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="TextBoxStyleLap" TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLapValid}" Value="False">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="#FFBD073B"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLapBestPersonalLap}" Value="True">
                            <Setter Property="Background" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLapBestSessionLap}" Value="True">
                            <Setter Property="Background" Value="Purple"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding LapNumber, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    Width= "60"
                                    Header="Lap #" />
                <DataGridTextColumn Binding="{Binding Sector1, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    Width= "90"
                                    Header="S1"
                                    ElementStyle="{StaticResource TextBoxStyleSector1}"/>
                <DataGridTextColumn Binding="{Binding Sector2, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    Width= "90"
                                    Header="S2"
                                    ElementStyle="{StaticResource TextBoxStyleSector2}"/>
                <DataGridTextColumn Binding="{Binding Sector3, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    Width= "90"
                                    Header="S3"
                                    ElementStyle="{StaticResource TextBoxStyleSector3}"/>
                <DataGridTextColumn Binding="{Binding LapTime, UpdateSourceTrigger=PropertyChanged}"
                                    Width= "140"
                                    Header="Time"
                                    ElementStyle="{StaticResource TextBoxStyleLap}"/>
            </DataGrid.Columns>
            <DataGrid.ItemContainerStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Background" Value="Black"></Setter>
                    <Setter Property="BorderBrush" Value="Gray"></Setter>
                    <Setter Property="BorderThickness" Value="0.5"></Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Black"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.ItemContainerStyle>
        </DataGrid>
        <Grid Grid.Row="2" Margin="10"
              Background="{StaticResource Anthracite01Brush}"
              Visibility="{Binding IsPlayer, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
            <StackPanel Orientation="Horizontal">
                <CheckBox Margin="5" VerticalAlignment="Center"
                          Foreground="{StaticResource LightGrey01Brush}"
                          IsChecked="{Binding HasCustomOutline, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <TextBlock FontSize="{StaticResource SmallFontSize}" Text="Enable Custom Outline" />
                </CheckBox>
                <Grid Width="20" Margin="5,0,0,0"
                      Background="{Binding OutLineColor, Converter={StaticResource ColorDtoToSolidBrushConverter}, Mode=OneWay}" />

                <xctk:ColorPicker Width="15" Height="15" Margin="2" HorizontalAlignment="Left"
                                  Background="{StaticResource Anthracite01Brush}"
                                  ButtonStyle="{StaticResource ComboBoxToggleButton2}"
                                  Foreground="{StaticResource LightGrey01Brush}"
                                  SelectedColor="{Binding OutLineColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ColorDtoToColorConverter}}" />
            </StackPanel>
        </Grid>
    </Grid>
</Window>
